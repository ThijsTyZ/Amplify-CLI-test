schema {
	query: Query
	mutation: Mutation
}

type AcceptedVendor {
	id: ID!
	logoFileName: String
	name: String!
	serviceCategoryId: ID!
	serviceCategoryName: String!
	someTestProps: String
}

type Address {
	addressAlias: String
	addressEmail: String
	country: String
	extendedAddress: String
	locality: String!
	postalCode: String!
	region: String
	streetAddress: String!
}

type BidServiceCategoryAndNeeds {
	id: ID!
	needs: String!
	serviceCategoryName: String!
	serviceSubCategoryName: String
	serviceSubCategoryServiceName: String
	vendorNames: [String]!
}

#  BUILDING
type Building {
	buildingId: ID!
	country: String!
	extendedAddress: String
	fileName: String
	id: ID!
	isPrologisBuilding: Boolean
	lat: Float
	lng: Float
	locality: String!
	postalCode: String!
	region: String!
	step: String
	streetAddress: String!
}

type BusinessHours {
	day: String!
	endTime: String
	startTime: String
}

#  GENERAL
type Code {
	code: Int!
}

type Customer {
	billingAddresses: [Address]
	company: String!
	createdDateTime: String
	customerId: ID!
	customerName: String!
	email: String!
	firstName: String!
	isActive: Boolean
	isAgreedTermsOfUse: Boolean
	isVerifiedCustomer: Boolean
	lastLogin: String
	lastName: String!
	localeCodePreference: String
	modifiedDateTime: String
	phoneNumber: String
	preferredContactMethod: String
	shippingAddresses: [Address]
	timeZonePreference: String!
}

#  IMAGE
type File {
	content: String
	fileName: String
	fileSize: Int
	fileType: String
}

type HoursOfOperationForDay {
	close: String
	is24Hours: Boolean
	isOpen: Boolean
	open: String
}

type Id {
	id: ID!
}

type Image {
	description: String
	fileId: String
	name: String
	ref: String
	type: String
}

type Mutation {
	# Bid
	addBidRequest(bidRequestInput: BidRequestInput!): BidServiceCategoryAndNeeds!
	addBidRequests(bidRequestsInput: BidRequestsInput!): Code!
	# Building
	addBuildingByEmailClaim(buildingInput: BuildingInput!): Building!
	# FixItNow
	addFixItNowRequest(fixItNowRequestInput: FixItNowRequestInput!): Id!
	deleteBuildingByEmailClaim(id: ID!): Code!
	updateBuildingByEmailClaim(buildingUpdateInput: BuildingUpdateInput!): Building!
	updateBuildingMoveInStateByBuildingId(buildingMoveInStateInput: BuildingMoveInStateInput): Id!
	# Customer
	updateCustomer(customerInput: CustomerInput!): Code!
	updateSelectedVendorForBid(selectBidVendorInput: SelectBidVendorInput!): Code!
}

type Option {
	coreEssentials: Boolean
	moveIn: Boolean
}

type PrologisContact {
	email: String!
	name: String!
	phone: String!
	title: String!
}

type Query {
	# Vendor
	getAcceptedVendorsByBuildingId(id: ID!): [AcceptedVendor]!
	getBidRequestDetailByBidRequestId(id: ID!): ServiceRequestDetail!
	getBidRequestsByBuildingId(id: ID!): [ServiceRequest]!
	# Bid
	getBidRequestsByUserClaim: [ServiceRequest]!
	getBuildingByEmailClaim(id: ID!): Building!
	# Building
	getBuildingsByEmailClaim: [Building]!
	# Custom
	getCustomer(id: ID!): Customer!
	# PrologisContacts
	getPrologisContactsByBuildingId(id: ID!): [PrologisContact]!
	# Secret Manager
	getSecretManagerMelissaKey: SecretManagerKey!
	# TermsOfUse
	getTermsOfUse: TermsOfUse!
	# Utilities
	getUtilitiesByPostalCode(country: String!, postalCode: String!): [Utility]!
	getVendorDetailsByVendorId(id: ID!): Vendor!
}

type SecretManagerKey {
	ARN: String
	CreatedDate: Float
	Name: String
	SecretString: String
	VersionId: String
	VersionStages: String
}

type ServiceRequest {
	building: Building!
	id: ID!
	serviceCategoryName: String
	status: String
	submittedOn: String
	vendorId: ID
	vendorLogo: String
	vendorName: String
}

type ServiceRequestDetail {
	buildingId: ID!
	needs: String!
	requestId: ID!
	requestImages: [String]
	serviceCategoryId: ID!
	serviceCategoryName: String!
	serviceSubCategoryId: ID!
	serviceSubCategoryName: String!
	serviceSubCategoryServiceId: ID!
	serviceSubCategoryServiceName: String!
	urgency: String
	vendorInfo: [ServiceRequestVendorInfo]!
}

type ServiceRequestVendorInfo {
	bidInfo: VendorBidInfo
	id: ID!
	isAccepted: Boolean
	isFixItNow: Boolean
	isSelected: Boolean
	logoFileName: String
	name: String!
	phoneNumber: String
}

type TermsOfUse {
	termsOfUse: String!
}

type Utility {
	category: String!
	country: String
	locality: String
	name: String!
	phone: String!
	region: String
}

# Vendor
type Vendor {
	adminEmail: String!
	businessHours: [BusinessHours]
	contactEmail: String
	id: ID!
	logo: File
	phoneNumber: String!
	premium: String
	primaryName: String!
	termsAndConditions: [File]
	timeZone: String
}

type VendorBidInfo {
	cost: String
	fileUrl: String
	summary: String
}

input AddressInput {
	addressAlias: String
	addressEmail: String
	country: String
	extendedAddress: String
	locality: String!
	postalCode: String!
	region: String
	streetAddress: String!
}

input BidRequestInput {
	buildingId: ID!
	images: [FileInput]
	needs: String!
	serviceCategory: ServiceCategoryInput!
	serviceSubCategory: ServiceCategoryInput
	serviceSubCategoryService: ServiceCategoryInput
	vendors: [VendorRequestInput]!
}

input BidRequestsInput {
	bids: [BulkBidsInput]!
	buildingId: ID!
}

input BuildingInput {
	attachment: String
	country: String!
	extendedAddress: String
	fileName: String
	fileType: String
	isPrologisBuilding: Boolean
	lat: Float!
	lng: Float!
	locality: String!
	postalCode: String!
	region: String!
	streetAddress: String!
}

input BuildingMoveInStateInput {
	buildingId: ID!
	step: String!
}

input BuildingUpdateInput {
	attachment: String
	buildingId: ID
	country: String!
	extendedAddress: String
	fileName: String
	fileType: String
	id: ID
	isPrologisBuilding: Boolean
	lat: Float
	lng: Float
	locality: String!
	postalCode: String!
	region: String!
	step: String
	streetAddress: String!
}

input BulkBidsInput {
	serviceCategoryId: ID!
	vendorIds: [ID]!
}

input BusinessHoursInput {
	day: String!
	endTime: String
	startTime: String
}

#  CUSTOMER
input CustomerInput {
	billingAddresses: [AddressInput]
	company: String!
	createdDateTime: String
	#  Id is not mandatory because we use the same input for update and creation
	customerId: ID
	customerName: String!
	email: String
	firstName: String!
	#  Cancellable
	isActive: Boolean
	isAgreedTermsOfUse: Boolean
	isVerifiedCustomer: Boolean
	lastLogin: String
	lastName: String!
	localeCodePreference: String
	modifiedDateTime: String
	password: String
	phoneNumber: String
	preferredContactMethod: String
	shippingAddresses: [AddressInput]
	timeZonePreference: String!
}

input FileInput {
	content: String
	fileName: String
	fileSize: Int
	fileType: String
}

input FixItNowRequestCategoryInput {
	categoryId: String
	serviceId: String
	subCategoryId: String
}

# FixItNow
input FixItNowRequestInput {
	building: BuildingUpdateInput!
	category: FixItNowRequestCategoryInput!
	description: String!
	images: [FileInput]
	localTime: String!
	localZone: String!
	preferredContactMethod: String!
	rushCharges: Boolean!
	urgency: String!
	user: UserInput!
	vendor: VendorInput!
}

input SelectBidVendorInput {
	bidRequestId: ID!
	vendorId: ID!
}

input ServiceCategoryInput {
	description: String
	id: ID!
	name: String!
}

input UserInput {
	company: String!
	email: String!
	firstName: String!
	lastName: String!
	phoneNumber: String!
	preferredContactMethod: String!
}

input VendorInput {
	adminEmail: String!
	businessHours: [BusinessHoursInput]
	contactEmail: String
	id: ID!
	logo: FileInput
	phoneNumber: String
	primaryName: String!
	termsAndConditions: [FileInput]
	timeZone: String
}

input VendorRequestInput {
	adminEmail: String!
	id: ID!
	primaryName: String!
}
